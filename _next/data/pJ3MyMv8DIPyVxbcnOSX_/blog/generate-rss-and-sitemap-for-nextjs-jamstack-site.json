{"pageProps":{"title":"Generate RSS and Sitemap for Next.js JAMstack site","slug":"generate-rss-and-sitemap-for-nextjs-jamstack-site","heroImageUrl":"","description":"RSS and sitemap are essential for blogs today. RSS Feeds let users subscribe to your content and improves user engagement. On the other hand, a sitemap is for search engines to find and index your content. Let's see how to generate these in a Next.js JAMStack site.","body":"RSS and sitemap are essential for blogs today. RSS Feeds let users subscribe to your content and improves user engagement. On the other hand, a sitemap is for search engines to find and index your content. \n\nWhen using a CMS like wordpress etc.., the RSS and sitemap XML files are generated at runtime. However, for JAMStack websites, we would like to create them at the build stage. I was not able to find an OOTB solution for next.js to create these files. The XML files for RSS and sitemap are not too complex to generate. Hence, I decided to not introduce any third party dependencies to generate these files.\n\nThere are mainly three questions to answer when generating these files. Where , When and How ?\n\n1. Where to place \n\nThe convention followed by many is to place rss.xml and sitemap.xml at the root of the website. Sitemaps can actually be split into various files and referenced from the main sitemap.xml. This is needed when sitemaps grow very huge. We will stick to single sitemap.xml for now.\n\nNext.js routing does not support files that are not content. So, what we can do is, to place these files in the `public` directory. Next's static file serving feature serves the files under this directory at the root of the website.\n\n2. When to generate \n\nWe have to generate the files inside the public directory during build. During build, the `getStaticProps` function is invoked for each page. We can leverage this function to create our XML files.\n\nWe can use `getStaticProps` function of any page component to create the files. However, so as to not clutter the real pages, I created a dummy.tsx page. The `getStaticProps` of this page component will be used to house all the additional build time processing logic.\n\nSince this is a dummy page, if anyone visits /dummy we should probably return 404 and also ignore from any search engine indexing. \n\n```JSX\nconst Dummy: React.FC = () => (\n  <>\n    <Head>\n      <meta name=\"robots\" content=\"noindex\" />\n    </Head>\n    <DefaultErrorPage statusCode={404} />\n  </>\n);\n```\n\n3. How to generate \n","author":{"name":"Anurag"},"publishDate":"2020-12-01T00:00+08:00","tags":null,"type":"blogPost"},"__N_SSG":true}