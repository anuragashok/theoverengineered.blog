<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
      <title>the_Over_Engineered_Blog</title>
      <link>https://theoverengineered.blog/</link>
      <description>the_Over_Engineered_Blog</description>
      <language>en</language>
      <lastBuildDate>Sat, 27 Feb 2021 16:00:00 GMT</lastBuildDate>
      <atom:link href="https://theoverengineered.blog/rss.xml" rel="self" type="application/rss+xml"/>
      
  <item>
    <guid>https://theoverengineered.blog/posts/publishing-my-first-artifact-to-maven-central</guid>
    <title>Publishing my first artifact to maven central</title>
    <link>https://theoverengineered.blog/posts/publishing-my-first-artifact-to-maven-central</link>
    <description>TEST</description>
    <category>maven</category>
    <enclosure url="https://images.ctfassets.net/lybfa03y94yw/5aipgcfbeKO4axygu3H3lj/c5c42921a97f6368e71d1d18ea8f8fc1/maven.svg" />
    <pubDate>Sat, 27 Feb 2021 16:00:00 GMT</pubDate>
  </item>

  <item>
    <guid>https://theoverengineered.blog/posts/capture-response-time-in-wiremock-recordings</guid>
    <title>Capture response time in wiremock recordings</title>
    <link>https://theoverengineered.blog/posts/capture-response-time-in-wiremock-recordings</link>
    <description>Wiremock provides a great recording feature to capture live flows and create stubs from them. These stubs can then be used to perform the tests without invoking dependencies. I like Wiremock&apos;s answers to imitate the actual dependency, including the response time of the dependency. Find out how wiremock can do that.</description>
    <category>wiremock load test java delay</category>
    <enclosure url="https://images.ctfassets.net/lybfa03y94yw/67cLyOldHSrZ3p11WX9ydJ/e223e57b570f4ec54f62f1fec66002b9/Technology___Theory__1_.jpg" />
    <pubDate>Sat, 06 Feb 2021 16:00:00 GMT</pubDate>
  </item>

  <item>
    <guid>https://theoverengineered.blog/posts/use-docker-for-local-development</guid>
    <title>Use Docker for local development</title>
    <link>https://theoverengineered.blog/posts/use-docker-for-local-development</link>
    <description>Containers are not only for application deployments. They offer many advantages for local development too. Find out how theOverEngineeredBlog uses Docker for local development.</description>
    <category>docker container development</category>
    <enclosure url="https://images.ctfassets.net/lybfa03y94yw/31kEfTG8wIqkq8mixJ9skZ/6d86d7f4d0c700179d8eae5b31e01766/Untitled_design.jpg" />
    <pubDate>Sun, 03 Jan 2021 16:00:00 GMT</pubDate>
  </item>

  <item>
    <guid>https://theoverengineered.blog/posts/generate-rss-and-sitemap-for-nextjs-jamstack-site</guid>
    <title>Generate RSS and Sitemap for Next.js JAMstack site</title>
    <link>https://theoverengineered.blog/posts/generate-rss-and-sitemap-for-nextjs-jamstack-site</link>
    <description>RSS and sitemap are essential for blogs today. RSS Feeds let users subscribe to your content and improves user engagement. On the other hand, a sitemap is for search engines to find and index your content. Let&apos;s see how to generate these in a Next.js JAMStack site.</description>
    <category>rss sitemap blogging jamstack nextjs</category>
    <enclosure url="https://images.ctfassets.net/lybfa03y94yw/3IejIjMkhHCU5xGOwXuW5o/6e1c1a898cbcde31682db277183fba0b/GENERATE_RSS_AND_SITEMAP.png" />
    <pubDate>Sun, 27 Dec 2020 16:00:00 GMT</pubDate>
  </item>

  <item>
    <guid>https://theoverengineered.blog/posts/initial-post</guid>
    <title>Initial Post</title>
    <link>https://theoverengineered.blog/posts/initial-post</link>
    <description>Jamstack is very popular these days. I decided to build this site using Jamstack practices. This post summarizes the various layers of the Jamstack eco-system used on this site.</description>
    <category>nextjs jamstack github github-pages react</category>
    <enclosure url="https://images.ctfassets.net/lybfa03y94yw/6I30Ej62DPAl0qK3HVt38B/8e0334362cb4a2c30ffc1bb1471606d9/intial-post.jpg" />
    <pubDate>Sat, 19 Dec 2020 16:00:00 GMT</pubDate>
  </item>

    </channel>
  </rss>